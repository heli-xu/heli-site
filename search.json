[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Heli Xu",
    "section": "",
    "text": "Thanks for stopping by."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Philly Center City Distric Restaurant Week 2022\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nOct 4, 2022\n\n\nHeli Xu\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html",
    "href": "posts/2022philly-restaurant-week/index.html",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "",
    "text": "This is based on an R-ladies Philly workshop on webscraping, geocoding, and interactive map-making presented by Silvia Canelón. I found it really interesting and helpful, and Silvia made it easy to follow, even though I had zero experience making maps prior to that. I’m replicating steps from Silvia’s tutorial using another set of data from Center City District. The goal is to visualize all the restaurants participating in the 2022 CCD Restaurant Week in an interactive map.\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(knitr)\nlibrary(robotstxt)\nlibrary(rvest)\nlibrary(tidygeocoder)\nlibrary(leaflet)\nlibrary(leaflet.extras)"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#checking-site-permissions",
    "href": "posts/2022philly-restaurant-week/index.html#checking-site-permissions",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "checking site permissions",
    "text": "checking site permissions\nTo check if an pages are not allowed to be scraped, we are using robotstxt package.\n\nget_robotstxt(\"https://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view\")\n\nWarning in request_handler_handler(request = request, handler = on_not_found, :\nEvent: on_not_found\n\n\nWarning in request_handler_handler(request = request, handler =\non_file_type_mismatch, : Event: on_file_type_mismatch\n\n\nWarning in request_handler_handler(request = request, handler =\non_suspect_content, : Event: on_suspect_content\n\n\n[robots.txt]\n--------------------------------------\n\n# robots.txt overwrite by: on_suspect_content\n\nUser-agent: *\nAllow: /\n\n\n\n[events]\n--------------------------------------\n\nrequested:   https://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view/robots.txt \ndownloaded:  https://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view/robots.txt \n\n$on_not_found\n$on_not_found$status_code\n[1] 404\n\n\n$on_file_type_mismatch\n$on_file_type_mismatch$content_type\n[1] \"text/html; charset=utf-8\"\n\n\n$on_suspect_content\n$on_suspect_content$parsable\n[1] FALSE\n\n$on_suspect_content$content_suspect\n[1] TRUE\n\n\n[attributes]\n--------------------------------------\n\nproblems, cached, request, class\n\n\n(sometimes it says something about not resolving host-the website-but it goes away but itself after a few tries.)"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#harvesting-data-from-the-first-page",
    "href": "posts/2022philly-restaurant-week/index.html#harvesting-data-from-the-first-page",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "Harvesting data from the first page",
    "text": "Harvesting data from the first page\nWe are using In the list view from the website, all restaurants are split into four pages, so we’d need a function to scrape each page. Before that, we’ll check the function with the first page.\n\n# define the page (click on page 1 at the bottom)\nurl1 <- \"https://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1\"\n\n# read the page html\nhtml1 <- read_html(url1)\n\n# extract table info (inspect elements)\ntable1 <- html1 %>% \n  html_node(\"table\") %>% \n  html_table()\ntable1 %>% head() %>% kable()  # if piped all the way down it doesn't print\n\n\n\n\n\n\n\n\n\nName\nAddress\nPhone\nMenu & Reservations\n\n\n\n1028 Yamitsuki Sushi & Ramen\n1028 Arch Street, Philadelphia, PA 19107\n215.629.3888\nMenu & Reservations\n\n\n1225 Raw Sushi and Sake Lounge\n1225 Sansom St, Philadelphia, PA 19102\n215.238.1903\nMenu & Reservations\n\n\nAlice Pizza\n235 S 15th Street, Philadelphia, PA 19102\n215.545.2020\nMenu & Reservations\n\n\nAncient Spirits & Grille\n1726 Chestnut St, Philadelphia, PA 19103\n215.478.8777\nMenu & Reservations\n\n\nBank and Bourbon\n1200 Market St, Philadelphia, PA 19107\n215.231.7300\nMenu & Reservations\n\n\nBarbuzzo\n110 S 13th St, Philadelphia, PA 19107\n215.546.9300\nMenu & Reservations\n\n\n\n\n# extract hyperlinks to specific restaurant menus (popup window)\n# can right click-copy link address to see what it's supposed to look at \nlinks <- html1 %>% \n  html_elements(\".o-table__tag.ccd-text-link\") %>% \n  html_attr(\"href\") %>% # a vector \n  as_tibble() \nlinks %>% head() %>% kable()\n\n\n\nvalue\n\n\n\n#1028-yamitsuki-sushi-ramen\n\n\n#1225-raw-sushi-and-sake-lounge\n\n\n#alice-pizza\n\n\n#ancient-spirits-grille\n\n\n#bank-and-bourbon\n\n\n#barbuzzo\n\n\n\n\n# add links to the table \ntable1_link <- bind_cols(table1, links) %>% \n  mutate(Menu = paste0(url1, value)) %>% \n  select(-c('Menu & Reservations', value)) \ntable1_link %>% head() %>% kable()\n\n\n\n\n\n\n\n\n\nName\nAddress\nPhone\nMenu\n\n\n\n1028 Yamitsuki Sushi & Ramen\n1028 Arch Street, Philadelphia, PA 19107\n215.629.3888\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#1028-yamitsuki-sushi-ramen\n\n\n1225 Raw Sushi and Sake Lounge\n1225 Sansom St, Philadelphia, PA 19102\n215.238.1903\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#1225-raw-sushi-and-sake-lounge\n\n\nAlice Pizza\n235 S 15th Street, Philadelphia, PA 19102\n215.545.2020\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#alice-pizza\n\n\nAncient Spirits & Grille\n1726 Chestnut St, Philadelphia, PA 19103\n215.478.8777\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#ancient-spirits-grille\n\n\nBank and Bourbon\n1200 Market St, Philadelphia, PA 19107\n215.231.7300\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#bank-and-bourbon\n\n\nBarbuzzo\n110 S 13th St, Philadelphia, PA 19107\n215.546.9300\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#barbuzzo"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#create-a-function-to-harvest-data-from-remaining-pages",
    "href": "posts/2022philly-restaurant-week/index.html#create-a-function-to-harvest-data-from-remaining-pages",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "Create a function to harvest data from remaining pages",
    "text": "Create a function to harvest data from remaining pages\n\ngetTables <- function(pageNumber) {\n  # wait 2 seconds between each page \n  Sys.sleep(2)\n  \n  url <- paste0(\"https://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=\", pageNumber)\n  \n  # read the page html\n  html <- read_html(url)\n  \n  # extract table info\n  table <- html %>% \n    html_node(\"table\") %>% \n    html_table()\n  \n  # extract hyperlinks to specific restaurant menus (popup window)\n  links <- html %>%\n    html_elements(\".o-table__tag.ccd-text-link\") %>%\n    html_attr(\"href\") %>% # a vector\n    as_tibble() \n  \n  # add links to the table\n  table_link <- bind_cols(table, links) %>%\n    mutate(Menu = paste0(url, value)) %>%\n    select(-c('Menu & Reservations', value))\n}\n\nAfter creating the function, we can use purrr::map_df() to repeat the data harvesting for the rest of pages (2-4). Then we can combine all the data frames together and save the final data frame as and .rds. object, so that we don’t have to keep scraping every time.\n\n# get remaining table\ntable2_4 <- map_df(2:4, getTables)\n\n# combine all tables\ntable_all <- bind_rows(table1_link, table2_4)\ntable_all %>% head() %>% kable()\n\n#tryout with or without kable()\ntable_all %>% head()\n\n# save full table to file\nwrite_rds(table_all, file = here(\"data\", \"restaurant_list_links.rds\"))\n\nSide note: saveRDS() vs write_rds(): the only major difference between the two is that write_rds() does not compress the file by default.\n(I only added cache: true at his point, to avoid repeated scraping, I’ll load the . rds file here for downstream visualization.)\n\n\n\n\n\n\n\n\n\n\nName\nAddress\nPhone\nMenu\n\n\n\n1028 Yamitsuki Sushi & Ramen\n1028 Arch Street, Philadelphia, PA 19107\n215.629.3888\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#1028-yamitsuki-sushi-ramen\n\n\n1225 Raw Sushi and Sake Lounge\n1225 Sansom St, Philadelphia, PA 19102\n215.238.1903\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#1225-raw-sushi-and-sake-lounge\n\n\nAlice Pizza\n235 S 15th Street, Philadelphia, PA 19102\n215.545.2020\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#alice-pizza\n\n\nAncient Spirits & Grille\n1726 Chestnut St, Philadelphia, PA 19103\n215.478.8777\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#ancient-spirits-grille\n\n\nBank and Bourbon\n1200 Market St, Philadelphia, PA 19107\n215.231.7300\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#bank-and-bourbon\n\n\nBarbuzzo\n110 S 13th St, Philadelphia, PA 19107\n215.546.9300\nhttps://centercityphila.org/explore-center-city/ccd-restaurant-week/list-view?page=1#barbuzzo"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#plotting-the-restaurants",
    "href": "posts/2022philly-restaurant-week/index.html#plotting-the-restaurants",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "Plotting the restaurants",
    "text": "Plotting the restaurants\nTo customize labels, we could add a Google Font with a css chunk to import the font faces/weights.\n\n@import url('https://fonts.googleapis.com/css2?family=Fira+Sans:wght@500&display=swap');\n\n\n\n\n\n\ncircles <- \n  leaflet(data = table_geo,\n        options = tileOptions(minZoom = 15,\n                              maxZoom = 19)) %>% \n  #add map markers\n  addCircles(lat = table_geo$Latitude,\n             lng = table_geo$Longtitude,\n             popup = table_geo$Address,\n             label = table_geo$Name,\n             #customize labels\n             labelOptions = labelOptions(\n               style = list(\n                 \"font-family\" = \"Fira Sans, sans-serif\",\n                 \"font-size\" = \"1.2em\"\n               )\n             ))\n\ncircles"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#adding-map-background",
    "href": "posts/2022philly-restaurant-week/index.html#adding-map-background",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "Adding map background",
    "text": "Adding map background\n\n# add map tiles in the background\ncircles_map <- circles %>% \n  addProviderTiles(providers$CartoDB.Voyager)\ncircles_map"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#setting-the-map-view",
    "href": "posts/2022philly-restaurant-week/index.html#setting-the-map-view",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "Setting the map view",
    "text": "Setting the map view\n\n# roughly set the center of all restaurants\ncircles_map_view <- circles_map %>% \n  setView(lng  = mean(table_geo$Longtitude),\n          lat = mean(table_geo$Latitude),\n          zoom = 16)\ncircles_map_view"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#adding-full-screen-control",
    "href": "posts/2022philly-restaurant-week/index.html#adding-full-screen-control",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "Adding full screen control",
    "text": "Adding full screen control\n\ncircles_map_view %>% \n  addFullscreenControl()"
  },
  {
    "objectID": "posts/2022philly-restaurant-week/index.html#customizing-map-markers",
    "href": "posts/2022philly-restaurant-week/index.html#customizing-map-markers",
    "title": "Philly Center City Distric Restaurant Week 2022",
    "section": "Customizing map markers",
    "text": "Customizing map markers\n\n# style pop-ups for the map with inline css styling\n\n# marker for the restaurants (circles)\npopInfoCircles <- paste(\n  \"<h2 style='font-family: Fira Sans, sans-serif; font-size: 1.6em; color:#43464C;'>\", \n  \"<a style='color: #00857A;' href=\", table_geo$Menu, \">\", table_geo$Name, \"</a></h2>\",\n  \"<p style='font-family: Fira Sans, sans-serif; font-weight: normal; font-size: 1.5em; color:#9197A6;'>\", table_geo$Address, \"</p>\"\n  )\n\nNow we are incorporating this styling into the previous map:\n\nleaflet(data = table_geo,\n        options = tileOptions(minZoom = 15,\n                              maxZoom = 19)) %>% \n  #add map markers\n  addCircles(lat = ~Latitude,\n             lng = ~Longtitude,\n             fillColor = \"#eb6857\",\n             fillOpacity = 0.7,\n             stroke = F,\n             radius = 13,\n             #customize popups (more info plus style)\n             popup = popInfoCircles,\n             label = ~Name,\n             #customize labels\n             labelOptions = labelOptions(\n               style = list(\n                 \"font-family\" = \"Fira Sans, sans-serif\",\n                 \"font-size\" = \"1.2em\"\n               )\n             )) %>% \n  addProviderTiles(providers$CartoDB.Voyager) %>% \n  setView(mean(table_geo$Longtitude),\n          mean(table_geo$Latitude),\n          zoom = 16) %>% \n  addFullscreenControl()"
  }
]